{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf400
{\fonttbl\f0\fnil\fcharset0 Menlo-Bold;\f1\fnil\fcharset0 Menlo-Regular;\f2\fnil\fcharset0 Menlo-Italic;
\f3\fnil\fcharset0 Menlo-BoldItalic;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue109;\red109\green109\blue109;\red82\green0\blue103;
\red0\green0\blue254;\red15\green112\blue3;}
{\*\expandedcolortbl;;\csgenericrgb\c0\c0\c42745;\csgenericrgb\c42745\c42745\c42745;\csgenericrgb\c32157\c0\c40392;
\csgenericrgb\c0\c0\c99608;\csgenericrgb\c5882\c43922\c1176;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\b\fs24 \cf2 package 
\f1\b0 \cf0 com.example;\uc0\u8232 \u8232 
\f0\b \cf2 import 
\f1\b0 \cf0 java.util.ArrayList;
\f2\i \cf3 \uc0\u8232 \u8232 
\f0\i0\b \cf2 public class 
\f1\b0 \cf0 BSTMinKElements \{\uc0\u8232 \u8232     
\f0\b \cf2 public 
\f1\b0 \cf0 ArrayList<Integer> minK(Node node, 
\f0\b \cf2 int 
\f1\b0 \cf0 k)\{\uc0\u8232         ArrayList<Integer> list = 
\f0\b \cf2 new 
\f1\b0 \cf0 ArrayList<Integer>();\uc0\u8232 \u8232         
\f0\b \cf2 if 
\f1\b0 \cf0 (node == 
\f0\b \cf2 null
\f1\b0 \cf0 ) 
\f0\b \cf2 return 
\f1\b0 \cf0 list;\uc0\u8232 \u8232         ArrayList<Integer> leftList = minK(node.
\f0\b \cf4 left
\f1\b0 \cf0 , k);\uc0\u8232         
\f0\b \cf2 if 
\f1\b0 \cf0 (leftList.size() == k) 
\f0\b \cf2 return 
\f1\b0 \cf0 leftList;\uc0\u8232         leftList.add(node.
\f0\b \cf4 data
\f1\b0 \cf0 );\uc0\u8232         
\f0\b \cf2 if 
\f1\b0 \cf0 (leftList.size() < k) \{\uc0\u8232             ArrayList<Integer> rightList = minK(node.
\f0\b \cf4 right
\f1\b0 \cf0 , k);\uc0\u8232             
\f0\b \cf2 int 
\f1\b0 \cf0 i=\cf5 0\cf0 ;\uc0\u8232             
\f0\b \cf2 while
\f1\b0 \cf0 (leftList.size() < k)\{\uc0\u8232                 
\f0\b \cf2 if
\f1\b0 \cf0 (i == rightList.size()) 
\f0\b \cf2 break
\f1\b0 \cf0 ;\uc0\u8232                 leftList.add(rightList.get(i));\u8232                 i++;\u8232             \}\u8232         \}\u8232         
\f0\b \cf2 return 
\f1\b0 \cf0 leftList;\uc0\u8232     \}\u8232 \u8232     
\f0\b \cf2 public static void 
\f1\b0 \cf0 main(String [] args) \{\uc0\u8232         Node root = 
\f0\b \cf2 new 
\f1\b0 \cf0 Node(\cf5 10\cf0 , 
\f0\b \cf2 null
\f1\b0 \cf0 , 
\f0\b \cf2 null
\f1\b0 \cf0 );\uc0\u8232         root.
\f0\b \cf4 left 
\f1\b0 \cf0 = 
\f0\b \cf2 new 
\f1\b0 \cf0 Node(\cf5 5\cf0 , 
\f0\b \cf2 new 
\f1\b0 \cf0 Node(\cf5 4\cf0 , 
\f0\b \cf2 null
\f1\b0 \cf0 , 
\f0\b \cf2 null
\f1\b0 \cf0 ), 
\f0\b \cf2 new 
\f1\b0 \cf0 Node(\cf5 7\cf0 , 
\f0\b \cf2 null
\f1\b0 \cf0 , 
\f0\b \cf2 null
\f1\b0 \cf0 ));\uc0\u8232         root.
\f0\b \cf4 right 
\f1\b0 \cf0 = 
\f0\b \cf2 new 
\f1\b0 \cf0 Node(\cf5 18\cf0 , 
\f0\b \cf2 null
\f1\b0 \cf0 , 
\f0\b \cf2 null
\f1\b0 \cf0 );\uc0\u8232         BSTMinKElements obj = 
\f0\b \cf2 new 
\f1\b0 \cf0 BSTMinKElements();\uc0\u8232         System.
\f3\i\b \cf4 out
\f1\i0\b0 \cf0 .println(
\f0\b \cf6 "BSTMIN " 
\f1\b0 \cf0 + obj.minK(root, \cf5 2\cf0 ));\uc0\u8232     \}\u8232 \}\u8232 \u8232 
\f0\b \cf2 class 
\f1\b0 \cf0 Node \{\uc0\u8232 \u8232     
\f0\b \cf2 int \cf4 data
\f1\b0 \cf0 ;\uc0\u8232     Node 
\f0\b \cf4 left
\f1\b0 \cf0 ;\uc0\u8232     Node 
\f0\b \cf4 right
\f1\b0 \cf0 ;\uc0\u8232 \u8232     
\f0\b \cf2 public 
\f1\b0 \cf0 Node(
\f0\b \cf2 int 
\f1\b0 \cf0 data, Node left, Node right)\{\uc0\u8232         
\f0\b \cf2 this
\f1\b0 \cf0 .
\f0\b \cf4 data 
\f1\b0 \cf0 = data;\uc0\u8232         
\f0\b \cf2 this
\f1\b0 \cf0 .
\f0\b \cf4 right 
\f1\b0 \cf0 = right;\uc0\u8232         
\f0\b \cf2 this
\f1\b0 \cf0 .
\f0\b \cf4 left
\f1\b0 \cf0 = left;\uc0\u8232     \}\u8232 \}\
}